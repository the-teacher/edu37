- content_for :title do
  = t('roles.title')

- content_for :css do
  = stylesheet_link_tag 'settings/style', :media=>'screen'

%h1
  = t('roles.title')

.panel
  %p
    = link_to raw(t('roles.list')), admin_roles_path

%h2
  = t('roles.name')
  = @role.title
- form_for :role, :url => {:action=>'update'}, :html => {:method => :put} do |f|
  = render :partial => 'form', :locals => {:f => f, :button=>t('roles.update')}

%h4
  = t('roles.create_section')
  
- form_tag(new_role_section_admin_role_path, :method => :post, :class=>:new_action) do
  = text_field_tag 'section_name'
  = submit_tag t('roles.create_section')


- role= @role.settings.is_a?(String) ? YAML::load(@role.settings) : Hash.new
- role= role.is_a?(Hash) ? role : Hash.new
%h4
  = t('roles.create_access_policy')

- role= @role.settings.is_a?(String) ? YAML::load(@role.settings) : Hash.new
- role= role.is_a?(Hash) ? role : Hash.new

- unless role.empty?
  - form_tag(new_role_rule_admin_role_path(@role), :method => :post, :class=>:new_action) do
    = text_field_tag 'section_rule'

    %select{:name=>"section_name"}
      -role.each do |name, set|
        %option{:value=>name}
          = name
        
      %input{:type=>"submit", :value=>t('roles.create_policy')}
- else
  = t('roles.section_needs')
